
package amsterminalclient;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "AMSWebService", targetNamespace = "http://ws.session.ejb/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface AMSWebService {


    /**
     * 
     * @param identityNumber
     * @param securityCode
     * @return
     *     returns java.util.List<amsterminalclient.AppointmentEntity>
     * @throws InvalidLoginException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "viewAppointments", targetNamespace = "http://ws.session.ejb/", className = "amsterminalclient.ViewAppointments")
    @ResponseWrapper(localName = "viewAppointmentsResponse", targetNamespace = "http://ws.session.ejb/", className = "amsterminalclient.ViewAppointmentsResponse")
    @Action(input = "http://ws.session.ejb/AMSWebService/viewAppointmentsRequest", output = "http://ws.session.ejb/AMSWebService/viewAppointmentsResponse", fault = {
        @FaultAction(className = InvalidLoginException_Exception.class, value = "http://ws.session.ejb/AMSWebService/viewAppointments/Fault/InvalidLoginException")
    })
    public List<AppointmentEntity> viewAppointments(
        @WebParam(name = "identityNumber", targetNamespace = "")
        String identityNumber,
        @WebParam(name = "securityCode", targetNamespace = "")
        String securityCode)
        throws InvalidLoginException_Exception
    ;

    /**
     * 
     * @param firstName
     * @param lastName
     * @param address
     * @param gender
     * @param identityNumber
     * @param phone
     * @param securityCode
     * @param age
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "registerPatient", targetNamespace = "http://ws.session.ejb/", className = "amsterminalclient.RegisterPatient")
    @ResponseWrapper(localName = "registerPatientResponse", targetNamespace = "http://ws.session.ejb/", className = "amsterminalclient.RegisterPatientResponse")
    @Action(input = "http://ws.session.ejb/AMSWebService/registerPatientRequest", output = "http://ws.session.ejb/AMSWebService/registerPatientResponse")
    public String registerPatient(
        @WebParam(name = "identityNumber", targetNamespace = "")
        String identityNumber,
        @WebParam(name = "securityCode", targetNamespace = "")
        String securityCode,
        @WebParam(name = "firstName", targetNamespace = "")
        String firstName,
        @WebParam(name = "lastName", targetNamespace = "")
        String lastName,
        @WebParam(name = "gender", targetNamespace = "")
        String gender,
        @WebParam(name = "age", targetNamespace = "")
        Integer age,
        @WebParam(name = "phone", targetNamespace = "")
        String phone,
        @WebParam(name = "address", targetNamespace = "")
        String address);

    /**
     * 
     * @param identityNumber
     * @param securityCode
     * @return
     *     returns java.lang.String
     * @throws InvalidLoginException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "doLogin", targetNamespace = "http://ws.session.ejb/", className = "amsterminalclient.DoLogin")
    @ResponseWrapper(localName = "doLoginResponse", targetNamespace = "http://ws.session.ejb/", className = "amsterminalclient.DoLoginResponse")
    @Action(input = "http://ws.session.ejb/AMSWebService/doLoginRequest", output = "http://ws.session.ejb/AMSWebService/doLoginResponse", fault = {
        @FaultAction(className = InvalidLoginException_Exception.class, value = "http://ws.session.ejb/AMSWebService/doLogin/Fault/InvalidLoginException")
    })
    public String doLogin(
        @WebParam(name = "identityNumber", targetNamespace = "")
        String identityNumber,
        @WebParam(name = "securityCode", targetNamespace = "")
        String securityCode)
        throws InvalidLoginException_Exception
    ;

    /**
     * 
     * @param identityNumber
     * @param doctorId
     * @param securityCode
     * @param inputTime
     * @param inputDate
     * @return
     *     returns amsterminalclient.AppointmentEntity
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addAppointment", targetNamespace = "http://ws.session.ejb/", className = "amsterminalclient.AddAppointment")
    @ResponseWrapper(localName = "addAppointmentResponse", targetNamespace = "http://ws.session.ejb/", className = "amsterminalclient.AddAppointmentResponse")
    @Action(input = "http://ws.session.ejb/AMSWebService/addAppointmentRequest", output = "http://ws.session.ejb/AMSWebService/addAppointmentResponse")
    public AppointmentEntity addAppointment(
        @WebParam(name = "identityNumber", targetNamespace = "")
        String identityNumber,
        @WebParam(name = "securityCode", targetNamespace = "")
        String securityCode,
        @WebParam(name = "doctorId", targetNamespace = "")
        long doctorId,
        @WebParam(name = "inputDate", targetNamespace = "")
        String inputDate,
        @WebParam(name = "inputTime", targetNamespace = "")
        String inputTime);

    /**
     * 
     * @param identityNumber
     * @param appointmentId
     * @param securityCode
     * @return
     *     returns java.lang.String
     * @throws InvalidLoginException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cancelAppointment", targetNamespace = "http://ws.session.ejb/", className = "amsterminalclient.CancelAppointment")
    @ResponseWrapper(localName = "cancelAppointmentResponse", targetNamespace = "http://ws.session.ejb/", className = "amsterminalclient.CancelAppointmentResponse")
    @Action(input = "http://ws.session.ejb/AMSWebService/cancelAppointmentRequest", output = "http://ws.session.ejb/AMSWebService/cancelAppointmentResponse", fault = {
        @FaultAction(className = InvalidLoginException_Exception.class, value = "http://ws.session.ejb/AMSWebService/cancelAppointment/Fault/InvalidLoginException")
    })
    public String cancelAppointment(
        @WebParam(name = "appointmentId", targetNamespace = "")
        long appointmentId,
        @WebParam(name = "identityNumber", targetNamespace = "")
        String identityNumber,
        @WebParam(name = "securityCode", targetNamespace = "")
        String securityCode)
        throws InvalidLoginException_Exception
    ;

}
